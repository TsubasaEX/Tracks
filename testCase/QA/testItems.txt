### :memo: Main Functions Test
- Version Check
    - Installed Chart Version
- Health Check
    - App Health Status (in all namespaces)
- AuthN/AuthZ
    - K8s Authentication/Authorization
- Accessing
    - Accessing Web Services
        - EdgeSense
        - DeviceOn
        - RabbitMQ
        - Minio
        - Prometheus
        - Grafana
        - AlertManager
        - ChartMuseum
        - Kubeapps
- App Management
    - Delete
    - Deploy
    - Upgrade
- Scripts
    - Environment
        - Destroy
        - Deploy
        - Reset
- Stress Test
    - EdgeSense

### Bugs & Issues
- [Scripts] bootup/shutdown
- [CoreDNS] http://aclredmine.advantech.com.tw/redmines/ecg/issues/6274
- [Kubeapps] http://aclredmine.advantech.com.tw/redmines/ecg/issues/6707
		
1. Extra Functions Test
-----------------------------------------------------------		
- Kubeapps Functions
	- Delete
	- Deploy
- Out of Space Test (Mongo)
	- Reinstall through Kubeapps
	- Function Check

	
2. Extra Functions Test
-----------------------------------------------------------
- Alerting
	- App Down
		- 
	- Storage 
		- Size over 80%
			- Mongo
*7. Others According to New Features
*8. Platform Stress Test (Still Planning)




UserManual
----
* Authentication

 1. root - ca.pem/config

 2. ubuntu - ca.pem/config 

* Authorization (RBAC)

```
kubectl get all (1 & 2 Pass)
```

```
kubectl delete pod/<pod> (1 Pass & 2 Fail)
```

```
helm list (1 Pass & 2 Fail)
```

* Access Web Services (IP)

 * http://<ip>:<port>
 * signin portal

* Access Web Services (DNS)

 * http://<url>:<port>
 * signin portal

* Kubernetes Dashbaord
 * signin portal (basic/config)
 * viewing each resources


Stress Test
---
* 400 Devices (75 sensors per 60 secs) - 2 days

 * Check basic functionalities of all Applications (EdgeSense/Grafana....)

 * Monitoring Reports - Grafana (Cluster/Mongo/RabbitMQ/Worker)
 
* 400 Devices (75 sensors per 1 secs) - 2 days

 * Check basic functionalities of all Applications (EdgeSense/Grafana....)

 * Monitoring Reports - Grafana (Cluster/Mongo/RabbitMQ/Worker)

